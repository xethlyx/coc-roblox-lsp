--# selene: allow(unused_variable)
---@diagnostic disable: unused-local

-- boolean	(default off)
-- 			global
-- 	Enable the entering of digraphs in Insert mode with {char1} <BS>
-- 	{char2}.  See |digraphs|.
vim.o.digraph = "false"
-- string	(default "$XDG_DATA_HOME/nvim/swap//")
-- 			global
-- 	List of directory names for the swap file, separated with commas.
-- 	- The swap file will be created in the first directory where this is
-- 	  possible.  If it is not possible in any directory, but last
-- 	  directory listed in the option does not exist, it is created.
-- 	- Empty means that no swap file will be used (recovery is
-- 	  impossible!) and no |E303| error will be given.
-- 	- A directory "." means to put the swap file in the same directory as
-- 	  the edited file.  On Unix, a dot is prepended to the file name, so
-- 	  it doesn't show in a directory listing.  On MS-Windows the "hidden"
-- 	  attribute is set and a dot prepended if possible.
-- 	- A directory starting with "./" (or ".\" for Windows) means to
-- 	  put the swap file relative to where the edited file is.  The leading
-- 	  "." is replaced with the path name of the edited file.
-- 	- For Unix and Win32, if a directory ends in two path separators "//",
-- 	  the swap file name will be built from the complete path to the file
-- 	  with all path separators substituted to percent '%' signs. This will
-- 	  ensure file name uniqueness in the preserve directory.
-- 	  On Win32, it is also possible to end with "\\".  However, When a
-- 	  separating comma is following, you must use "//", since "\\" will
-- 	  include the comma in the file name. Therefore it is recommended to
-- 	  use '//', instead of '\\'.
-- 	- Spaces after the comma are ignored, other spaces are considered part
-- 	  of the directory name.  To have a space at the start of a directory
-- 	  name, precede it with a backslash.
-- 	- To include a comma in a directory name precede it with a backslash.
-- 	- A directory name may end in an ':' or '/'.
-- 	- Environment variables are expanded |:set_env|.
-- 	- Careful with '\' characters, type one before a space, type two to
-- 	  get one in the option (see |option-backslash|), for example: >
-- 	    :set dir=c:\\tmp,\ dir\\,with\\,commas,\\\ dir\ with\ spaces
-- <	- For backwards compatibility with Vim version 3.0 a '>' at the start
-- 	  of the option is removed.
-- 	Using "." first in the list is recommended.  This means that editing
-- 	the same file twice will result in a warning.  Using "/tmp" on Unix is
-- 	discouraged: When the system crashes you lose the swap file.
-- 	"/var/tmp" is often not cleared when rebooting, thus is a better
-- 	choice than "/tmp".  But it can contain a lot of files, your swap
-- 	files get lost in the crowd.  That is why a "tmp" directory in your
-- 	home directory is tried first.
-- 	The use of |:set+=| and |:set-=| is preferred when adding or removing
-- 	directories from the list.  This avoids problems when a future version
-- 	uses another default.
-- 	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.directory = "C:\\Users\\xethl\\AppData\\Local\\nvim-data\\swap\\\\"
-- string	(default "lastline,msgsep", Vi default: "")
-- 			global
-- 	Change the way text is displayed.  This is comma separated list of
-- 	flags:
-- 	lastline	When included, as much as possible of the last line
-- 			in a window will be displayed.  "@@@" is put in the
-- 			last columns of the last screen line to indicate the
-- 			rest of the line is not displayed.
-- 	truncate	Like "lastline", but "@@@" is displayed in the first
-- 			column of the last screen line.  Overrules "lastline".
-- 	uhex		Show unprintable characters hexadecimal as <xx>
-- 			instead of using ^C and ~C.
-- 	msgsep		When showing messages longer than 'cmdheight', only
-- 			scroll the message lines, not the entire screen. The
-- 			separator line is decorated by |hl-MsgSeparator| and
-- 			the "msgsep" flag of 'fillchars'.
vim.o.display = "lastline,msgsep"
-- string	(default "both")
-- 			global
-- 	Tells when the 'equalalways' option applies:
-- 		ver	vertically, width of windows is not affected
-- 		hor	horizontally, height of windows is not affected
-- 		both	width and height of windows is affected
vim.o.eadirection = "both"
-- boolean (default: on)
-- 			global
-- 	When on all Unicode emoji characters are considered to be full width.
vim.o.emoji = "true"
-- boolean	(default on)
-- 			global
-- 	When on, all the windows are automatically made the same size after
-- 	splitting or closing a window.  This also happens the moment the
-- 	option is switched on.  When off, splitting a window will reduce the
-- 	size of the current window and leave the other windows the same.  When
-- 	closing a window the extra lines are given to the window next to it
-- 	(depending on 'splitbelow' and 'splitright').
-- 	When mixing vertically and horizontally split windows, a minimal size
-- 	is computed and some windows may be larger if there is room.  The
-- 	'eadirection' option tells in which direction the size is affected.
-- 	Changing the height and width of a window can be avoided by setting
-- 	'winfixheight' and 'winfixwidth', respectively.
-- 	If a window size is specified when creating a new window sizes are
-- 	currently not equalized (it's complicated, but may be implemented in
-- 	the future).
vim.o.equalalways = "true"
-- string	(default "")
-- 			global or local to buffer |global-local|
-- 	External program to use for "=" command.  When this option is empty
-- 	the internal formatting functions are used; either 'lisp', 'cindent'
-- 	or 'indentexpr'.  When Vim was compiled without internal formatting,
-- 	the "indent" program is used.
-- 	Environment variables are expanded |:set_env|.  See |option-backslash|
-- 	about including spaces and backslashes.
-- 	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.equalprg = ""
-- boolean	(default off)
-- 			global
-- 	Ring the bell (beep or screen flash) for error messages.  This only
-- 	makes a difference for error messages, the bell will be used always
-- 	for a lot of errors without a message (e.g., hitting <Esc> in Normal
-- 	mode).  See 'visualbell' to make the bell behave like a screen flash
-- 	or do nothing. See 'belloff' to finetune when to ring the bell.
vim.o.errorbells = "false"
-- string	(default: "errors.err")
-- 			global
-- 	Name of the errorfile for the QuickFix mode (see |:cf|).
-- 	When the "-q" command-line argument is used, 'errorfile' is set to the
-- 	following argument.  See |-q|.
-- 	NOT used for the ":make" command.  See 'makeef' for that.
-- 	Environment variables are expanded |:set_env|.
-- 	See |option-backslash| about including spaces and backslashes.
-- 	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.errorfile = "errors.err"
-- string	(default is very long)
-- 			global or local to buffer |global-local|
-- 	Scanf-like description of the format for the lines in the error file
-- 	(see |errorformat|).
vim.o.errorformat = "%f(%l) \\=: %t%*\\D%n: %m,%*[^\"]\"%f\"%*\\D%l: %m,%f(%l) \\=: %m,%*[^ ] %f %l: %m,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,%f|%l| %m"
-- string (default: "ucs-bom,utf-8,default,latin1")
-- 			global
-- 	This is a list of character encodings considered when starting to edit
-- 	an existing file.  When a file is read, Vim tries to use the first
-- 	mentioned character encoding.  If an error is detected, the next one
-- 	in the list is tried.  When an encoding is found that works,
-- 	'fileencoding' is set to it.  If all fail, 'fileencoding' is set to
-- 	an empty string, which means that UTF-8 is used.
-- 		WARNING: Conversion can cause loss of information! You can use
-- 		the |++bad| argument to specify what is done with characters
-- 		that can't be converted.
-- 	For an empty file or a file with only ASCII characters most encodings
-- 	will work and the first entry of 'fileencodings' will be used (except
-- 	"ucs-bom", which requires the BOM to be present).  If you prefer
-- 	another encoding use an BufReadPost autocommand event to test if your
-- 	preferred encoding is to be used.  Example: >
-- 		au BufReadPost * if search('\S', 'w') == 0 |
-- 			\ set fenc=iso-2022-jp | endif
-- <	This sets 'fileencoding' to "iso-2022-jp" if the file does not contain
-- 	non-blank characters.
-- 	When the |++enc| argument is used then the value of 'fileencodings' is
-- 	not used.
-- 	Note that 'fileencodings' is not used for a new file, the global value
-- 	of 'fileencoding' is used instead.  You can set it with: >
-- 		:setglobal fenc=iso-8859-2
-- <	This means that a non-existing file may get a different encoding than
-- 	an empty file.
-- 	The special value "ucs-bom" can be used to check for a Unicode BOM
-- 	(Byte Order Mark) at the start of the file.  It must not be preceded
-- 	by "utf-8" or another Unicode encoding for this to work properly.
-- 	An entry for an 8-bit encoding (e.g., "latin1") should be the last,
-- 	because Vim cannot detect an error, thus the encoding is always
-- 	accepted.
-- 	The special value "default" can be used for the encoding from the
-- 	environment.  It is useful when your environment uses a non-latin1
-- 	encoding, such as Russian.
-- 	When a file contains an illegal UTF-8 byte sequence it won't be
-- 	recognized as "utf-8".  You can use the |8g8| command to find the
-- 	illegal byte sequence.
-- 	WRONG VALUES:			WHAT'S WRONG:
-- 		latin1,utf-8		"latin1" will always be used
-- 		utf-8,ucs-bom,latin1	BOM won't be recognized in an utf-8
-- 					file
-- 		cp1250,latin1		"cp1250" will always be used
-- 	If 'fileencodings' is empty, 'fileencoding' is not modified.
-- 	See 'fileencoding' for the possible values.
-- 	Setting this option does not have an effect until the next time a file
-- 	is read.
vim.o.fileencodings = "ucs-bom,utf-8,default,latin1"
-- boolean	(default on for systems where case in file
-- 				 names is normally ignored)
-- 			global
-- 	When set case is ignored when using file names and directories.
-- 	See 'wildignorecase' for only ignoring case when doing completion.
vim.o.fileignorecase = "true"
-- string (default "")
-- 			global
-- 	When set to "all", a fold is closed when the cursor isn't in it and
-- 	its level is higher than 'foldlevel'.  Useful if you want folds to
-- 	automatically close when moving out of them.
vim.o.foldclose = ""
-- number (default: -1)
-- 			global
-- 	Sets 'foldlevel' when starting to edit another buffer in a window.
-- 	Useful to always start editing with all folds closed (value zero),
-- 	some folds closed (one) or no folds closed (99).
-- 	This is done before reading any modeline, thus a setting in a modeline
-- 	overrules this option.  Starting to edit a file for |diff-mode| also
-- 	ignores this option and closes all folds.
-- 	It is also done before BufReadPre autocommands, to allow an autocmd to
-- 	overrule the 'foldlevel' value for specific files.
-- 	When the value is negative, it is not used.
vim.o.foldlevelstart = "-1"
-- string (default: "block,hor,mark,percent,quickfix,
-- 							     search,tag,undo")
-- 			global
-- 	Specifies for which type of commands folds will be opened, if the
-- 	command moves the cursor into a closed fold.  It is a comma separated
-- 	list of items.
-- 	NOTE: When the command is part of a mapping this option is not used.
-- 	Add the |zv| command to the mapping to get the same effect.
-- 	(rationale: the mapping may want to control opening folds itself)
vim.o.foldopen = "block,hor,mark,percent,quickfix,search,tag,undo"
-- string (default "")
-- 			global or local to buffer |global-local|
-- 	The name of an external program that will be used to format the lines
-- 	selected with the |gq| operator.  The program must take the input on
-- 	stdin and produce the output on stdout.  The Unix program "fmt" is
-- 	such a program.
-- 	If the 'formatexpr' option is not empty it will be used instead.
-- 	Otherwise, if 'formatprg' option is an empty string, the internal
-- 	format function will be used |C-indenting|.
-- 	Environment variables are expanded |:set_env|.  See |option-backslash|
-- 	about including spaces and backslashes.
-- 	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.formatprg = ""
-- string	(default "")
-- 			global or local to buffer |global-local|
-- 	List of file names, separated by commas, that are used to lookup words
-- 	for keyword completion commands |i_CTRL-X_CTRL-K|.  Each file should
-- 	contain a list of words.  This can be one word per line, or several
-- 	words per line, separated by non-keyword characters (white space is
-- 	preferred).  Maximum line length is 510 bytes.
vim.o.dictionary = ""
-- boolean	(default off)
-- 			global
-- 	When on, the ":substitute" flag 'g' is default on.  This means that
-- 	all matches in a line are substituted instead of one.  When a 'g' flag
-- 	is given to a ":substitute" command, this will toggle the substitution
-- 	of all or one match.  See |complex-change|.
vim.o.gdefault = "false"
-- string	(default "%f:%l:%m,%f:%l%m,%f  %l%m")
-- 			global
-- 	Format to recognize for the ":grep" command output.
-- 	This is a scanf-like string that uses the same format as the
-- 	'errorformat' option: see |errorformat|.
vim.o.grepformat = "%f:%l:%m,%f:%l%m,%f  %l%m"
-- string	(default "n-v-c-sm:block,i-ci-ve:ver25,r-cr-o:hor20")
-- 			global
-- 	Configures the cursor style for each mode. Works in the GUI and many
-- 	terminals.  See |tui-cursor-shape|.
vim.o.guicursor = "n-v-c-sm:block,i-ci-ve:ver25,r-cr-o:hor20"
-- string	(default "")
-- 			global
-- 	This is a list of fonts which will be used for the GUI version of Vim.
-- 	In its simplest form the value is just one font name.  When
-- 	the font cannot be found you will get an error message.  To try other
-- 	font names a list can be specified, font names separated with commas.
-- 	The first valid font is used.
vim.o.guifont = ""
-- string	(default "")
-- 			global
-- 	When not empty, specifies a comma-separated list of fonts to be used
-- 	for double-width characters.  The first font that can be loaded is
-- 	used.
-- 	Note: The size of these fonts must be exactly twice as wide as the one
-- 	specified with 'guifont' and the same height.
vim.o.guifontwide = ""
-- string	(default "egmrLT"   (MS-Windows))
-- 			global
-- 	This option only has an effect in the GUI version of Vim.  It is a
-- 	sequence of letters which describes what components and options of the
-- 	GUI should be used.
-- 	To avoid problems with flags that are added in the future, use the
-- 	"+=" and "-=" feature of ":set" |add-option-flags|.
vim.o.guioptions = ""
-- string	(default empty)
-- 			global
-- 	When nonempty describes the text to use in a label of the GUI tab
-- 	pages line.  When empty and when the result is empty Vim will use a
-- 	default label.  See |setting-guitablabel| for more info.
vim.o.guitablabel = ""
-- string	(default empty)
-- 			global
-- 	When nonempty describes the text to use in a tooltip for the GUI tab
-- 	pages line.  When empty Vim will use a default tooltip.
-- 	This option is otherwise just like 'guitablabel' above.
-- 	You can include a line break.  Simplest method is to use |:let|: >
-- 		:let &guitabtooltip = "line one\nline two"
-- <
vim.o.guitabtooltip = ""
-- string	(default (MSDOS)  "$VIMRUNTIME\doc\help.txt"
-- 					 (others) "$VIMRUNTIME/doc/help.txt")
-- 			global
-- 	Name of the main help file.  All distributed help files should be
-- 	placed together in one directory.  Additionally, all "doc" directories
-- 	in 'runtimepath' will be used.
-- 	Environment variables are expanded |:set_env|.  For example:
-- 	"$VIMRUNTIME/doc/help.txt".  If $VIMRUNTIME is not set, $VIM is also
-- 	tried.  Also see |$VIMRUNTIME| and |option-backslash| about including
-- 	spaces and backslashes.
-- 	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.helpfile = "C:\\Program Files\\Neovim\\share\\nvim\\runtime\\doc\\help.txt"
-- number	(default 20)
-- 			global
-- 	Minimal initial height of the help window when it is opened with the
-- 	":help" command.  The initial height of the help window is half of the
-- 	current window, or (when the 'ea' option is on) the same as other
-- 	windows.  When the height is less than 'helpheight', the height is
-- 	set to 'helpheight'.  Set to zero to disable.
vim.o.helpheight = "20"
-- string	(default: messages language or empty)
-- 			global
-- 	Comma separated list of languages.  Vim will use the first language
-- 	for which the desired help can be found.  The English help will always
-- 	be used as a last resort.  You can add "en" to prefer English over
-- 	another language, but that will only find tags that exist in that
-- 	language and not in the English help.
-- 	Example: >
-- 		:set helplang=de,it
-- <	This will first search German, then Italian and finally English help
-- 	files.
-- 	When using |CTRL-]| and ":help!" in a non-English help file Vim will
-- 	try to find the tag in the current language before using this option.
-- 	See |help-translated|.
vim.o.helplang = ""
-- boolean	(default off)
-- 			global
-- 	When off a buffer is unloaded when it is |abandon|ed.  When on a
-- 	buffer becomes hidden when it is |abandon|ed.  If the buffer is still
-- 	displayed in another window, it does not become hidden, of course.
-- 	The commands that move through the buffer list sometimes make a buffer
-- 	hidden although the 'hidden' option is off: When the buffer is
-- 	modified, 'autowrite' is off or writing is not possible, and the '!'
-- 	flag was used.  See also |windows.txt|.
-- 	To only make one buffer hidden use the 'bufhidden' option.
-- 	This option is set for one command with ":hide {command}" |:hide|.
-- 	WARNING: It's easy to forget that you have changes in hidden buffers.
-- 	Think twice when using ":q!" or ":qa!".
vim.o.hidden = "true"
-- number	(Vim default: 10000, Vi default: 0)
-- 			global
-- 	A history of ":" commands, and a history of previous search patterns
-- 	is remembered.  This option decides how many entries may be stored in
-- 	each of these histories (see |cmdline-editing|).
-- 	The maximum value is 10000.
vim.o.history = "10000"
-- boolean (default off)
-- 			global
-- 	When on, the keyboard is mapped for the Hebrew character set.
-- 	Normally you would set 'allowrevins' and use CTRL-_ in insert mode to
-- 	toggle this option.  See |rileft.txt|.
vim.o.hkmap = "false"
-- boolean (default off)
-- 			global
-- 	When on, phonetic keyboard mapping is used.  'hkmap' must also be on.
-- 	This is useful if you have a non-Hebrew keyboard.
-- 	See |rileft.txt|.
vim.o.hkmapp = "false"
-- boolean	(default on)
-- 			global
-- 	When there is a previous search pattern, highlight all its matches.
-- 	The |hl-Search| highlight group determines the highlighting. Note that
-- 	only the matching text is highlighted, any offsets are not applied.
-- 	See also: 'incsearch' and |:match|.
-- 	When you get bored looking at the highlighted matches, you can turn it
-- 	off with |:nohlsearch|.  This does not change the option value, as
-- 	soon as you use a search command, the highlighting comes back.
-- 	'redrawtime' specifies the maximum time spent on finding matches.
-- 	When the search pattern can match an end-of-line, Vim will try to
-- 	highlight all of the matched text.  However, this depends on where the
-- 	search starts.  This will be the first line in the window or the first
-- 	line below a closed fold.  A match in a previous line which is not
-- 	drawn may not continue in a newly drawn line.
-- 	You can specify whether the highlight status is restored on startup
-- 	with the 'h' flag in 'shada' |shada-h|.
vim.o.hlsearch = "true"
-- boolean	(default off, on when title can be restored)
-- 			global
-- 	When on, the icon text of the window will be set to the value of
-- 	'iconstring' (if it is not empty), or to the name of the file
-- 	currently being edited.  Only the last part of the name is used.
-- 	Overridden by the 'iconstring' option.
-- 	Only works if the terminal supports setting window icons.
vim.o.icon = "false"
-- string	(default "")
-- 			global
-- 	When this option is not empty, it will be used for the icon text of
-- 	the window.  This happens only when the 'icon' option is on.
-- 	Only works if the terminal supports setting window icon text
-- 	When this option contains printf-style '%' items, they will be
-- 	expanded according to the rules used for 'statusline'.  See
-- 	'titlestring' for example settings.
-- 	This option cannot be set in a modeline when 'modelineexpr' is off.
vim.o.iconstring = ""
-- boolean	(default off)
-- 			global
-- 	Ignore case in search patterns.  Also used when searching in the tags
-- 	file.
-- 	Also see 'smartcase' and 'tagcase'.
-- 	Can be overruled by using "\c" or "\C" in the pattern, see
-- 	|/ignorecase|.
vim.o.ignorecase = "false"
-- boolean (default off)
-- 			global
-- 	When set the Input Method is always on when starting to edit a command
-- 	line, unless entering a search pattern (see 'imsearch' for that).
-- 	Setting this option is useful when your input method allows entering
-- 	English characters directly, e.g., when it's used to type accented
-- 	characters with dead keys.
vim.o.imcmdline = "false"
-- string	(default "")
-- 			global
vim.o.inccommand = "nosplit"
-- string	(default "^\s*#\s*include")
-- 			global or local to buffer |global-local|
-- 	Pattern to be used to find an include command.  It is a search
-- 	pattern, just like for the "/" command (See |pattern|).  The default
-- 	value is for C programs.  This option is used for the commands "[i",
-- 	"]I", "[d", etc.
-- 	Normally the 'isfname' option is used to recognize the file name that
-- 	comes after the matched pattern.  But if "\zs" appears in the pattern
-- 	then the text matched from "\zs" to the end, or until "\ze" if it
-- 	appears, is used as the file name.  Use this to include characters
-- 	that are not in 'isfname', such as a space.  You can then use
-- 	'includeexpr' to process the matched text.
-- 	See |option-backslash| about including spaces and backslashes.
vim.o.include = "^\\s*#\\s*include"
-- boolean	(default on)
-- 			global
-- 	While typing a search command, show where the pattern, as it was typed
-- 	so far, matches.  The matched string is highlighted.  If the pattern
-- 	is invalid or not found, nothing is shown.  The screen will be updated
-- 	often, this is only useful on fast terminals.
-- 	Note that the match will be shown, but the cursor will return to its
-- 	original position when no match is found and when pressing <Esc>.  You
-- 	still need to finish the search command with <Enter> to move the
-- 	cursor to the match.
-- 	You can use the CTRL-G and CTRL-T keys to move to the next and
-- 	previous match. |c_CTRL-G| |c_CTRL-T|
-- 	Vim only searches for about half a second.  With a complicated
-- 	pattern and/or a lot of text the match may not be found.  This is to
-- 	avoid that Vim hangs while you are typing the pattern.
-- 	The |hl-IncSearch| highlight group determines the highlighting.
-- 	When 'hlsearch' is on, all matched strings are highlighted too while
-- 	typing a search command. See also: 'hlsearch'.
-- 	If you don't want to turn 'hlsearch' on, but want to highlight all
-- 	matches while searching, you can turn on and off 'hlsearch' with
-- 	autocmd.  Example: >
-- 		augroup vimrc-incsearch-highlight
-- 		  autocmd!
-- 		  autocmd CmdlineEnter /,\? :set hlsearch
-- 		  autocmd CmdlineLeave /,\? :set nohlsearch
-- 		augroup END
-- <
-- 	CTRL-L can be used to add one character from after the current match
-- 	to the command line.  If 'ignorecase' and 'smartcase' are set and the
-- 	command line has no uppercase characters, the added character is
-- 	converted to lowercase.
-- 	CTRL-R CTRL-W can be used to add the word at the end of the current
-- 	match, excluding the characters that were already typed.
vim.o.incsearch = "true"
-- boolean	(default off)
-- 			global
-- 	Makes Vim work in a way that Insert mode is the default mode.  Useful
-- 	if you want to use Vim as a modeless editor.
-- 	These Insert mode commands will be useful:
-- 	- Use the cursor keys to move around.
-- 	- Use CTRL-O to execute one Normal mode command |i_CTRL-O|.  When
-- 	  this is a mapping, it is executed as if 'insertmode' was off.
-- 	  Normal mode remains active until the mapping is finished.
-- 	- Use CTRL-L to execute a number of Normal mode commands, then use
-- 	  <Esc> to get back to Insert mode.  Note that CTRL-L moves the cursor
-- 	  left, like <Esc> does when 'insertmode' isn't set.  |i_CTRL-L|
vim.o.insertmode = "false"
-- string	(default for Windows:
-- 			     "@,48-57,/,\,.,-,_,+,,,#,$,%,{,},[,],:,@-@,!,~,="
-- 			    otherwise: "@,48-57,/,.,-,_,+,,,#,$,%,~,=")
-- 			global
-- 	The characters specified by this option are included in file names and
-- 	path names.  Filenames are used for commands like "gf", "[i" and in
-- 	the tags file.  It is also used for "\f" in a |pattern|.
-- 	Multi-byte characters 256 and above are always included, only the
-- 	characters up to 255 are specified with this option.
-- 	For UTF-8 the characters 0xa0 to 0xff are included as well.
-- 	Think twice before adding white space to this option.  Although a
-- 	space may appear inside a file name, the effect will be that Vim
-- 	doesn't know where a file name starts or ends when doing completion.
-- 	It most likely works better without a space in 'isfname'.
vim.o.isfname = "@,48-57,/,\\,.,-,_,+,,,#,$,%,{,},[,],:,@-@,!,~,="
-- string	(default for Windows:
-- 					   "@,48-57,_,128-167,224-235"
-- 				otherwise: "@,48-57,_,192-255")
-- 			global
-- 	The characters given by this option are included in identifiers.
-- 	Identifiers are used in recognizing environment variables and after a
-- 	match of the 'define' option.  It is also used for "\i" in a
-- 	|pattern|.  See 'isfname' for a description of the format of this
-- 	option.  For '@' only characters up to 255 are used.
-- 	Careful: If you change this option, it might break expanding
-- 	environment variables.  E.g., when '/' is included and Vim tries to
-- 	expand "$HOME/.local/share/nvim/shada/main.shada".  Maybe you should
-- 	change 'iskeyword' instead.
vim.o.isident = "@,48-57,_,128-167,224-235"
-- string	(default: "@,161-255")
-- 			global
-- 	The characters given by this option are displayed directly on the
-- 	screen.  It is also used for "\p" in a |pattern|.  The characters from
-- 	space (ASCII 32) to '~' (ASCII 126) are always displayed directly,
-- 	even when they are not included in 'isprint' or excluded.  See
-- 	'isfname' for a description of the format of this option.
vim.o.isprint = "@,161-255"
-- string	(default "")
-- 			global
-- 	List of words that change the behavior of the |jumplist|.
-- 	  stack         Make the jumplist behave like the tagstack or like a
-- 	                web browser.  Relative location of entries in the
-- 			jumplist is preserved at the cost of discarding
-- 			subsequent entries when navigating backwards in the
-- 			jumplist and then jumping to a location.
-- 			|jumplist-stack|
vim.o.jumpoptions = ""
-- boolean	(default on)
-- 			global
-- 	Insert two spaces after a '.', '?' and '!' with a join command.
-- 	Otherwise only one space is inserted.
vim.o.joinspaces = "false"
-- string	(default "")
-- 			global
-- 	List of comma separated words, which enable special things that keys
-- 	can do.  These values can be used:
-- 	   startsel	Using a shifted special key starts selection (either
-- 			Select mode or Visual mode, depending on "key" being
-- 			present in 'selectmode').
-- 	   stopsel	Using a not-shifted special key stops selection.
-- 	Special keys in this context are the cursor keys, <End>, <Home>,
-- 	<PageUp> and <PageDown>.
-- 	The 'keymodel' option is set by the |:behave| command.
vim.o.keymodel = ""
-- string	(default ":Man", Windows: ":help")
-- 			global or local to buffer |global-local|
-- 	Program to use for the |K| command.  Environment variables are
-- 	expanded |:set_env|.  ":help" may be used to access the Vim internal
-- 	help.  (Note that previously setting the global option to the empty
-- 	value did this, which is now deprecated.)
-- 	When the first character is ":", the command is invoked as a Vim
-- 	command prefixed with [count].
-- 	When "man" or "man -s" is used, Vim will automatically translate
-- 	a [count] for the "K" command to a section number.
-- 	See |option-backslash| about including spaces and backslashes.
-- 	Example: >
-- 		:set keywordprg=man\ -s
-- 		:set keywordprg=:Man
-- <	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.keywordprg = ":Man"
-- string	(default "")
-- 			global
-- 	This option allows switching your keyboard into a special language
-- 	mode.  When you are typing text in Insert mode the characters are
-- 	inserted directly.  When in Normal mode the 'langmap' option takes
-- 	care of translating these special characters to the original meaning
-- 	of the key.  This means you don't have to change the keyboard mode to
-- 	be able to execute Normal mode commands.
-- 	This is the opposite of the 'keymap' option, where characters are
-- 	mapped in Insert mode.
-- 	Also consider resetting 'langremap' to avoid 'langmap' applies to
-- 	characters resulting from a mapping.
-- 	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.langmap = ""
-- boolean (default off)
-- 			global
-- 	When off, setting 'langmap' does not apply to characters resulting from
-- 	a mapping.  If setting 'langmap' disables some of your mappings, make
-- 	sure this option is off.
vim.o.langremap = "false"
-- number	(default 2)
-- 			global
-- 	The value of this option influences when the last window will have a
-- 	status line:
-- 		0: never
-- 		1: only if there are at least two windows
-- 		2: always
-- 	The screen looks nicer with a status line if you have several
-- 	windows, but it takes another screen line. |status-line|
vim.o.laststatus = "2"
-- boolean	(default off)
-- 			global
-- 	When this option is set, the screen will not be redrawn while
-- 	executing macros, registers and other commands that have not been
-- 	typed.  Also, updating the window title is postponed.  To force an
-- 	update use |:redraw|.
vim.o.lazyredraw = "false"
-- number	(default 0)
-- 			global
-- 			{only in the GUI}
-- 	Number of pixel lines inserted between characters.  Useful if the font
-- 	uses the full character cell height, making lines touch each other.
-- 	When non-zero there is room for underlining.
-- 	With some fonts there can be too much room between lines (to have
-- 	space for ascents and descents).  Then it makes sense to set
-- 	'linespace' to a negative value.  This may cause display problems
-- 	though!
vim.o.linespace = "0"
-- string	(default is very long)
-- 			global or local to buffer |global-local|
-- 	Comma separated list of words that influence the Lisp indenting.
-- 	|'lisp'|
vim.o.lispwords = "defun,define,defmacro,set!,lambda,if,case,let,flet,let*,letrec,do,do*,define-syntax,let-syntax,letrec-syntax,destructuring-bind,defpackage,defparameter,defstruct,deftype,defvar,do-all-symbols,do-external-symbols,do-symbols,dolist,dotimes,ecase,etypecase,eval-when,labels,macrolet,multiple-value-bind,multiple-value-call,multiple-value-prog1,multiple-value-setq,prog1,progv,typecase,unless,unwind-protect,when,with-input-from-string,with-open-file,with-open-stream,with-output-to-string,with-package-iterator,define-condition,handler-bind,handler-case,restart-bind,restart-case,with-simple-restart,store-value,use-value,muffle-warning,abort,continue,with-slots,with-slots*,with-accessors,with-accessors*,defclass,defmethod,print-unreadable-object"
-- boolean	(default on)
-- 			global
-- 	When on the plugin scripts are loaded when starting up |load-plugins|.
-- 	This option can be reset in your |vimrc| file to disable the loading
-- 	of plugins.
-- 	Note that using the "-u NONE" and "--noplugin" command line arguments
-- 	reset this option. |-u| |--noplugin|
vim.o.loadplugins = "true"
-- boolean	(default on)
-- 			global
-- 	Changes the special characters that can be used in search patterns.
-- 	See |pattern|.
-- 	WARNING: Switching this option off most likely breaks plugins!  That
-- 	is because many patterns assume it's on and will fail when it's off.
-- 	Only switch it off when working with old Vi scripts.  In any other
-- 	situation write patterns that work when 'magic' is on.  Include "\M"
-- 	when you want to |/\M|.
vim.o.magic = "true"
-- string	(default "")
-- 			global or local to buffer |global-local|
-- 	Encoding used for reading the output of external commands.  When empty,
-- 	encoding is not converted.
-- 	This is used for `:make`, `:lmake`, `:grep`, `:lgrep`, `:grepadd`,
-- 	`:lgrepadd`, `:cfile`, `:cgetfile`, `:caddfile`, `:lfile`, `:lgetfile`,
-- 	and `:laddfile`.
vim.o.makeencoding = ""
-- number	(default 5)
-- 			global
-- 	Tenths of a second to show the matching paren, when 'showmatch' is
-- 	set.  Note that this is not in milliseconds, like other options that
-- 	set a time.  This is to be compatible with Nvi.
vim.o.matchtime = "5"
-- Removed. |vim-differences|
-- 	Nvim always displays up to 6 combining characters.  You can still edit
--     text with more than 6 combining characters, you just can't see them.
--     Use |g8| or |ga|.  See |mbyte-combining|.
vim.o.maxcombine = "6"
-- number	(default 100)
-- 			global
-- 	Maximum depth of function calls for user functions.  This normally
-- 	catches endless recursion.  When using a recursive function with
-- 	more depth, set 'maxfuncdepth' to a bigger number.  But this will use
-- 	more memory, there is the danger of failing when memory is exhausted.
-- 	Increasing this limit above 200 also changes the maximum for Ex
-- 	command recursion, see |E169|.
-- 	See also |:function|.
vim.o.maxfuncdepth = "100"
-- number	(default 1000)
-- 			global
-- 	Maximum number of times a mapping is done without resulting in a
-- 	character to be used.  This normally catches endless mappings, like
-- 	":map x y" with ":map y x".  It still does not catch ":map g wg",
-- 	because the 'w' is used before the next mapping is done.  See also
-- 	|key-mapping|.
vim.o.maxmapdepth = "1000"
-- number	(default 1000)
-- 			global
-- 	Maximum amount of memory (in Kbyte) to use for pattern matching.
-- 	The maximum value is about 2000000.  Use this to work without a limit.
-- 							*E363*
-- 	When Vim runs into the limit it gives an error message and mostly
-- 	behaves like CTRL-C was typed.
-- 	Running into the limit often means that the pattern is very
-- 	inefficient or too complex.  This may already happen with the pattern
-- 	"\(.\)*" on a very long line.  ".*" works much better.
-- 	Might also happen on redraw, when syntax rules try to match a complex
-- 	text structure.
-- 	Vim may run out of memory before hitting the 'maxmempattern' limit, in
-- 	which case you get an "Out of memory" error instead.
vim.o.maxmempattern = "1000"
-- number	(default 25)
-- 			global
-- 	Maximum number of items to use in a menu.  Used for menus that are
-- 	generated from a list of items, e.g., the Buffers menu.  Changing this
-- 	option has no direct effect, the menu must be refreshed first.
vim.o.menuitems = "25"
-- string	(default "460000,2000,500")
-- 			global
-- 	Parameters for |:mkspell|.  This tunes when to start compressing the
-- 	word tree.  Compression can be slow when there are many words, but
-- 	it's needed to avoid running out of memory.  The amount of memory used
-- 	per word depends very much on how similar the words are, that's why
-- 	this tuning is complicated.
vim.o.mkspellmem = "460000,2000,500"
-- boolean (default: off)
-- 			global
-- 	When on allow some options that are an expression to be set in the
-- 	modeline.  Check the option for whether it is affected by
-- 	'modelineexpr'.  Also see |modeline|.
vim.o.modelineexpr = "false"
-- boolean	(Vim default: on, Vi default: off)
-- 			global
-- 	When on, listings pause when the whole screen is filled.  You will get
-- 	the |more-prompt|.  When this option is off there are no pauses, the
-- 	listing continues until finished.
vim.o.more = "true"
-- string	(default "")
-- 			global
vim.o.mouse = "nvi"
-- boolean	(default off)
-- 			global
-- 			{only works in the GUI}
-- 	The window that the mouse pointer is on is automatically activated.
-- 	When changing the window layout or window focus in another way, the
-- 	mouse pointer is moved to the window with keyboard focus.  Off is the
-- 	default because it makes using the pull down menus a little goofy, as
-- 	a pointer transit may activate a window unintentionally.
vim.o.mousefocus = "false"
-- boolean	(default on)
-- 			global
-- 			{only works in the GUI}
-- 	When on, the mouse pointer is hidden when characters are typed.
-- 	The mouse pointer is restored when the mouse is moved.
vim.o.mousehide = "true"
-- string	(default "i:beam,r:beam,s:updown,sd:cross,
-- 					m:no,ml:up-arrow,v:rightup-arrow")
-- 			global
-- 	This option tells Vim what the mouse pointer should look like in
-- 	different modes.  The option is a comma separated list of parts, much
-- 	like used for 'guicursor'.  Each part consist of a mode/location-list
-- 	and an argument-list:
-- 		mode-list:shape,mode-list:shape,..
-- 	The mode-list is a dash separated list of these modes/locations:
-- 			In a normal window: ~
-- 		n	Normal mode
-- 		v	Visual mode
-- 		ve	Visual mode with 'selection' "exclusive" (same as 'v',
-- 			if not specified)
-- 		o	Operator-pending mode
-- 		i	Insert mode
-- 		r	Replace mode
vim.o.mouseshape = ""
-- number	(default 500)
-- 			global
-- 	Defines the maximum time in msec between two mouse clicks for the
-- 	second click to be recognized as a multi click.
vim.o.mousetime = "500"
-- string	(default: empty)
-- 			global
-- 	This option specifies a function to be called by the |g@| operator.
-- 	See |:map-operator| for more info and an example.
vim.o.operatorfunc = ""
-- string	(default: see 'runtimepath')
-- 	Directories used to find packages.  See |packages|.
vim.o.packpath = "C:\\Users\\xethl\\AppData\\Local\\nvim,C:\\Users\\xethl\\AppData\\Local\\nvim-data\\site,C:\\Program Files\\Neovim\\share\\nvim\\runtime,C:\\Program Files\\Neovim\\lib\\nvim,C:\\Users\\xethl\\AppData\\Local\\nvim-data\\site\\after,C:\\Users\\xethl\\AppData\\Local\\nvim\\after"
-- string	(default "IPLPPPQPP TPHPLIPpLpItpplpipbp")
-- 			global
-- 	Specifies the nroff macros that separate paragraphs.  These are pairs
-- 	of two letters (see |object-motions|).
vim.o.paragraphs = "IPLPPPQPP TPHPLIPpLpItpplpipbp"
-- string	(default "")
-- 			global
-- 	Expression which is evaluated to apply a patch to a file and generate
-- 	the resulting new version of the file.  See |diff-patchexpr|.
vim.o.patchexpr = ""
-- string	(default "")
-- 			global or local to window |global-local|
-- 	Characters to fill the statuslines and vertical separators.
-- 	It is a comma separated list of items:
vim.o.fillchars = ""
-- string	(default: "tab:> ,trail:-,nbsp:+"
-- 				 Vi default: "eol:$")
-- 			global or local to window |global-local|
-- 	Strings to use in 'list' mode and for the |:list| command.  It is a
-- 	comma separated list of string settings.
vim.o.listchars = "tab:> ,trail:-,nbsp:+"
-- string	(default: see below)
-- 			global
-- 	Expression used to print the PostScript produced with |:hardcopy|.
-- 	See |pexpr-option|.
-- 	This option cannot be set from a |modeline| or in the |sandbox|, for
-- 	security reasons.
vim.o.printexpr = "system(['copy', v:fname_in, empty(&printdevice)?'LPT1':&printdevice]). delete(v:fname_in)"
-- string (default "")
-- 			global
-- 	The CJK character set to be used for CJK output from |:hardcopy|.
-- 	See |pmbcs-option|.
vim.o.printmbcharset = ""
-- string (default "")
-- 			global
-- 	List of font names to be used for CJK output from |:hardcopy|.
-- 	See |pmbfn-option|.
vim.o.printmbfont = ""
-- string (default "")
-- 			global
-- 	List of items that control the format of the output of |:hardcopy|.
-- 	See |popt-option|.
vim.o.printoptions = ""
-- boolean	(default on)
-- 			global
-- 	When on a ":" prompt is used in Ex mode.
vim.o.prompt = "true"
-- number	(default 0)
-- 			global
-- 	Enables pseudo-transparency for the |popup-menu|. Valid values are in
-- 	the range of 0 for fully opaque popupmenu (disabled) to 100 for fully
-- 	transparent background. Values between 0-30 are typically most useful.
vim.o.pumblend = "0"
-- number	(default depends on the build)
-- 			global
-- 	Specifies the python version used for pyx* functions and commands
-- 	|python_x|.  The default value is as follows:
vim.o.pyxversion = "3"
-- string	(default '')
-- 			global
-- 	Flags to change the way redrawing works, for debugging purposes.
-- 	Most useful with 'writedelay' set to some reasonable value.
-- 	Supports the following flags:
-- 	    compositor	Indicate what redraws come from the compositor
-- 			by briefly flashing the redrawn regions in colors
-- 			indicating the redraw type. These are the highlight
-- 			groups used (and their default colors):
-- 		RedrawDebugNormal   gui=reverse   normal redraw passed through
-- 		RedrawDebugClear    guibg=Yellow  clear event passed through
-- 		RedrawDebugComposed guibg=Green   redraw event modified by the
-- 						  compositor (due to
-- 						  overlapping grids, etc)
-- 		RedrawDebugRecompose guibg=Red    redraw generated by the
-- 						  compositor itself, due to a
-- 						  grid being moved or deleted.
-- 	    nothrottle	Turn off throttling of the message grid. This is an
-- 			optimization that joins many small scrolls to one
-- 			larger scroll when drawing the message area (with
-- 			'display' msgsep flag active).
-- 	    invalid	Enable stricter checking (abort) of inconsistencies
-- 			of the internal screen state. This is mostly
-- 			useful when running nvim inside a debugger (and
-- 			the test suite).
-- 	    nodelta	Send all internally redrawn cells to the UI, even if
-- 	                they are unchanged from the already displayed state.
vim.o.redrawdebug = ""
-- number	(default 0)
-- 			global
-- 	This selects the default regexp engine. |two-engines|
-- 	The possible values are:
-- 		0	automatic selection
-- 		1	old engine
-- 		2	NFA engine
-- 	Note that when using the NFA engine and the pattern contains something
-- 	that is not supported the pattern will not match.  This is only useful
-- 	for debugging the regexp engine.
-- 	Using automatic selection enables Vim to switch the engine, if the
-- 	default engine becomes too costly.  E.g., when the NFA engine uses too
-- 	many states.  This should prevent Vim from hanging on a combination of
-- 	a complex pattern with long text.
vim.o.regexpengine = "0"
-- boolean	(default on)
-- 			global
-- 	Allows for mappings to work recursively.  If you do not want this for
-- 	a single entry, use the :noremap[!] command.
-- 	NOTE: To avoid portability problems with Vim scripts, always keep
-- 	this option at the default "on".  Only switch it off when working with
-- 	old Vi scripts.
vim.o.remap = "true"
-- number	(default 2)
-- 			global
-- 	Threshold for reporting number of lines changed.  When the number of
-- 	changed lines is more than 'report' a message will be given for most
-- 	":" commands.  If you want it always, set 'report' to 0.
-- 	For the ":substitute" command the number of substitutions is used
-- 	instead of the number of lines.
vim.o.report = "2"
-- boolean	(default off)
-- 			global
-- 	Inserting characters in Insert mode will work backwards.  See "typing
-- 	backwards" |ins-reverse|.  This option can be toggled with the CTRL-_
-- 	command in Insert mode, when 'allowrevins' is set.
-- 	This option is reset when 'paste' is set and restored when 'paste' is
-- 	reset.
vim.o.revins = "false"
-- string	(default (as a single string):
-- 				     "8:SpecialKey,~:EndOfBuffer,@:NonText,
-- 				     d:Directory,e:ErrorMsg,i:IncSearch,
-- 				     l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,
-- 				     a:LineNrAbove,b:LineNrBelow,
-- 				     N:CursorLineNr,r:Question,s:StatusLine,
-- 				     S:StatusLineNC,c:VertSplit,t:Title,
-- 				     v:Visual,V:VisualNOS,w:WarningMsg,
-- 				     W:WildMenu,f:Folded,F:FoldColumn,
-- 				     A:DiffAdd,C:DiffChange,D:DiffDelete,
-- 				     T:DiffText,>:SignColumn,-:Conceal,
-- 				     B:SpellBad,P:SpellCap,R:SpellRare,
-- 				     L:SpellLocal,+:Pmenu,=:PmenuSel,
-- 				     x:PmenuSbar,X:PmenuThumb,*:TabLine,
-- 				     #:TabLineSel,_:TabLineFill,!:CursorColumn,
-- 				     .:CursorLine,o:ColorColumn,q:QuickFixLine,
-- 				     z:StatusLineTerm,Z:StatusLineTermNC")
-- 			global
-- 	This option can be used to set highlighting mode for various
-- 	occasions.  It is a comma separated list of character pairs.  The
-- 	first character in a pair gives the occasion, the second the mode to
-- 	use for that occasion.  The occasions are:
-- 	|hl-SpecialKey|	 8  Meta and special keys listed with ":map"
-- 	|hl-EndOfBuffer|   ~  lines after the last line in the buffer
-- 	|hl-NonText|	 @  '@' at the end of the window and
-- 			    characters from 'showbreak'
-- 	|hl-Directory|	 d  directories in CTRL-D listing and other special
-- 			    things in listings
-- 	|hl-ErrorMsg|	 e  error messages
-- 			 h  (obsolete, ignored)
-- 	|hl-IncSearch|	 i  'incsearch' highlighting
-- 	|hl-Search|	 l  last search pattern highlighting (see 'hlsearch')
-- 	|hl-MoreMsg|	 m  |more-prompt|
-- 	|hl-ModeMsg|	 M  Mode (e.g., "-- INSERT --")
-- 	|hl-LineNr|	 n  line number for ":number" and ":#" commands, and
-- 			    when 'number' or 'relativenumber' option is set.
-- 	|hl-LineNrAbove|   a  line number above the cursor for when the
-- 			    'relativenumber' option is set.
-- 	|hl-LineNrBelow|   b  line number below the cursor for when the
-- 			    'relativenumber' option is set.
-- 	|hl-CursorLineNr|  N like n for when 'cursorline' or 'relativenumber' is
-- 			    set.
-- 	|hl-Question|	 r  |hit-enter| prompt and yes/no questions
-- 	|hl-StatusLine|	 s  status line of current window |status-line|
-- 	|hl-StatusLineNC|  S  status lines of not-current windows
-- 	|hl-Title|	 t  Titles for output from ":set all", ":autocmd" etc.
-- 	|hl-VertSplit|	 c  column used to separate vertically split windows
-- 	|hl-Visual|	 v  Visual mode
-- 	|hl-VisualNOS|	 V  Visual mode when Vim does is "Not Owning the
-- 			    Selection" Only X11 Gui's |gui-x11| and
-- 			    |xterm-clipboard|.
-- 	|hl-WarningMsg|	 w  warning messages
-- 	|hl-WildMenu|	 W  wildcard matches displayed for 'wildmenu'
-- 	|hl-Folded|	 f  line used for closed folds
-- 	|hl-FoldColumn|	 F  'foldcolumn'
-- 	|hl-DiffAdd|	 A  added line in diff mode
-- 	|hl-DiffChange|	 C  changed line in diff mode
-- 	|hl-DiffDelete|	 D  deleted line in diff mode
-- 	|hl-DiffText|	 T  inserted text in diff mode
-- 	|hl-SignColumn|	 >  column used for |signs|
-- 	|hl-Conceal|	 -  the placeholders used for concealed characters
-- 			    (see 'conceallevel')
-- 	|hl-SpellBad|	 B  misspelled word |spell|
-- 	|hl-SpellCap|	 P  word that should start with capital |spell|
-- 	|hl-SpellRare|	 R  rare word |spell|
-- 	|hl-SpellLocal|	 L  word from other region |spell|
-- 	|hl-Pmenu|	 +  popup menu normal line
-- 	|hl-PmenuSel|	 =  popup menu selected line
-- 	|hl-PmenuSbar|	 x  popup menu scrollbar
-- 	|hl-PmenuThumb|	 X  popup menu scrollbar thumb
vim.o.highlight = "8:SpecialKey,~:EndOfBuffer,z:TermCursor,Z:TermCursorNC,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,y:CurSearch,m:MoreMsg,M:ModeMsg,n:LineNr,a:LineNrAbove,b:LineNrBelow,N:CursorLineNr,G:CursorLineSign,O:CursorLineFoldr:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,-:Conceal,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine,o:ColorColumn,q:QuickFixLine,0:Whitespace,I:NormalNC"
-- boolean	(default on)
-- 			global
-- 	Allows writing files.  When not set, writing a file is not allowed.
-- 	Can be used for a view-only mode, where modifications to the text are
-- 	still allowed.  Can be reset with the |-m| or |-M| command line
-- 	argument.  Filtering text is still possible, even though this requires
-- 	writing a temporary file.
vim.o.write = "true"
-- number	(default 24 or terminal height)
-- 			global
-- 	Number of lines of the Vim window.
-- 	Normally you don't need to set this.  It is done automatically by the
-- 	terminal initialization code.
-- 	When Vim is running in the GUI or in a resizable window, setting this
-- 	option will cause the window size to be changed.  When you only want
-- 	to use the size for the GUI, put the command in your |gvimrc| file.
-- 	Vim limits the number of lines to what fits on the screen.  You can
-- 	use this command to get the tallest window possible: >
-- 		:set lines=999
-- <	Minimum value is 2, maximum value is 1000.
vim.o.lines = "24"
-- boolean	(default off)
-- 			global
-- 	This option is obsolete; |bracketed-paste-mode| is built-in.
vim.o.paste = "false"
-- boolean (default off)
-- 			global
-- 			{not available when compiled without the |+cscope|
-- 			feature}
-- 	Give messages when adding a cscope database.  See |cscopeverbose|.
-- 	NOTE: This option is reset when 'compatible' is set.
vim.o.cscopeverbose = "true"
-- boolean	(default off)
-- 			global
-- 	Makes the 'g' and 'c' flags of the ":substitute" command to be
-- 	toggled each time the flag is given.  See |complex-change|.  See
-- 	also 'gdefault' option.
-- 	Switching this option on may break plugins!
vim.o.edcompatible = "false"
-- string (default: "latin1" or value from $LANG)
-- 			global
-- 	Sets the character encoding used inside Vim.  It applies to text in
-- 	the buffers, registers, Strings in expressions, text stored in the
-- 	viminfo file, etc.  It sets the kind of characters which Vim can work
-- 	with.  See |encoding-names| for the possible values.
vim.o.encoding = "utf-8"
-- boolean (default off)
-- 			global
-- 	Enables the reading of .vimrc, .exrc and .gvimrc in the current
-- 	directory.
vim.o.exrc = "false"
-- boolean	(default off)
-- 			global
-- 			{only for Windows}
-- 	When set, a forward slash is used when expanding file names.  This is
-- 	useful when a Unix-like shell is used instead of command.com or
-- 	cmd.exe.  Backward slashes can still be typed, but they are changed to
-- 	forward slashes by Vim.
-- 	Note that setting or resetting this option has no effect for some
-- 	existing file names, thus this option needs to be set before opening
-- 	any file for best results.  This might change in the future.
-- 	'shellslash' only works when a backslash can be used as a path
-- 	separator.  To test if this is so use: >
-- 		if exists('+shellslash')
-- <
-- 			*'shelltemp'* *'stmp'* *'noshelltemp'* *'nostmp'*
vim.o.shellslash = "false"
-- boolean (default off, set in |defaults.vim|)
-- 			global
-- 			{only available when compiled with the |+langmap|
-- 			feature}
-- 	This is just like 'langremap' but with the value inverted.  It only
-- 	exists for backwards compatibility.  When setting 'langremap' then
-- 	'langnoremap' is set to the inverted value, and the other way around.
vim.o.langnoremap = "true"
